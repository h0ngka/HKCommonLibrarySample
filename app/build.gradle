apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
//    compileSdkVersion shared.compileSdkVersion
//    buildToolsVersion shared.buildToolVersion
    compileSdkVersion 25
    buildToolsVersion "26.0.2"

    defaultConfig {
        applicationId "com.hongka.hkcommonlibrarysample"
//        minSdkVersion shared.minSdkVersion
//        targetSdkVersion shared.targetSdkVersion
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "default"

    productFlavors {
        dev {
            minSdkVersion 21
        }
        prod {
//            minSdkVersion shared.minSdkVersion
            minSdkVersion 16
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFile 'proguard-debug.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // TODO : 여러가지 방법으로 apk 파일명 바꾸기
//    applicationVariants.all { variant ->
//        variant.outputs.all {
//            def buildType = variant.variantData.variantConfiguration.buildType.name
//            def serverKind;
//            if (buildType == 'debug') {
//                serverKind = "STG"
//            } else {
//                serverKind = "REAL"
//            }
//            outputFileName = "hkcommonlibrarysample_${serverKind}_${variant.versionName}(${variant.versionCode})}.apk"
//        }
//    }
//
//    applicationVariants.all { variant ->
//        variant.outputs.all {
//            def serverKind = variant.buildType.buildConfigFields.get("SERVER_KIND").value ?:''
//            outputFileName = "hkcommonlibrarysample_${serverKind}_${variant.versionName}(${variant.versionCode})}.apk"
//        }
//    }

    // 특정 buildTypes 비노출
    // http://gun0912.tistory.com/76
    // https://developer.android.com/studio/build/build-variants.html?hl=ko
    variantFilter { variant ->
        def buildName = variant.buildType.name;
        def flavorName = variant.getFlavors().get(0).name;

        if (flavorName == 'prod' & buildName == 'release'
            || flavorName == 'dev' & buildName == 'release') {
            variant.setIgnore(true);
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

repositories {
    maven { url 'https://jitpack.io' }
}

def hkCommonLibraryRelativeDir = new File('../HKCommonLibrary/hkcommonlibrary')

dependencies {
//    compileDefault project
//    compile 'com.android.support:support-v4'
//    compile 'com.android.support:design'
//    compile 'com.android.support:recyclerview-v7'
//    compile 'com.github.bumptech.glide:glide'
//    compile hkCommonLibraryRelativeDir.exists() ? project(':HKCommonLibrary') : 'com.github.h0ngka:HKCommonLibrary'
//    compile 'com.google.android.exoplayer:exoplayer'
//    compile 'com.github.feeeei:CircleSeekbar'
//    compile 'com.github.HaarigerHarald:android-youtubeExtractor'
//    compile "com.google.guava:guava:18.0"



    compile project.fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile("com.android.support.test.espresso:espresso-core:2.2.2", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:4.12"

    compile "com.android.support:appcompat-v7:25.3.1"
    compile "com.android.support:support-v4:25.3.1"
    compile "com.android.support:recyclerview-v7:25.3.1"
    compile "com.android.support:design:25.3.1"

    compile "com.github.bumptech.glide:glide:3.7.0"
    compile 'com.github.h0ngka:HKCommonLibrary:1.0.5'
//    compile hkCommonLibraryRelativeDir.exists() ? project(':HKCommonLibrary') : 'com.github.h0ngka:HKCommonLibrary'

    // For Lifecycles, LiveData, and ViewModel
    compile "android.arch.lifecycle:runtime:1.0.0-alpha3"
    compile "android.arch.lifecycle:extensions:1.0.0-alpha3"
    annotationProcessor "android.arch.lifecycle:compiler:1.0.0-alpha3"

    // kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

// Task Coding Test
task sayHello << {
    println "Hello Gradle!"
}

def greetings = "greetings";
task sayHelloGroup(group:greetings) << {
    println "greetings -> Hello Gradle!"
}

// commond line에서 tasks 명령어를 치며 description 내용을 확인 할수 있다.
task sayHelloGroupDescriptions(group:greetings, description:"my greetings is hello") << {
    println "greetings -> Hello Gradle!"
}

// 어떤 task를 내 task보다 먼저 실행해야 한다면 'dependsOn'이라는 속성으로 지정합니다.
task sayHelloGroupDescriptionsDependsOn(group:greetings,
        description:"my greetings is hello",
        dependsOn:"meetingPeople") {
//    println "greetings -> Hello Gradle!"

    doFirst {
        println "Look at me"
    }

    doLast {
        println "Hello Gradle"
    }
}

task meetingPeople(group: greetings) << {
    println "I met some people"
}

apply from: 'static_analysis.gradle'
